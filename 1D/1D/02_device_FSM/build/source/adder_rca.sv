/*
    This file was generated automatically by Alchitry Labs 2.0.30-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module adder_rca #(
        parameter SIZE = 6'h20
    ) (
        input wire [(SIZE)-1:0] a,
        input wire [(SIZE)-1:0] b,
        output reg carry_out,
        output reg [(SIZE)-1:0] sum
    );
    logic [31:0] R_3faacb55_i;
    logic [31:0] RR_3faacb55_i;
    logic [(SIZE + 1'h1)-1:0] carry;
    logic [(SIZE)-1:0] M_full_adder_a;
    logic [(SIZE)-1:0] M_full_adder_b;
    logic [(SIZE)-1:0] M_full_adder_cin;
    logic [(SIZE)-1:0] M_full_adder_s;
    logic [(SIZE)-1:0] M_full_adder_cout;
    
    genvar idx_0_1939897879;
    
    generate
        for (idx_0_1939897879 = 0; idx_0_1939897879 < SIZE; idx_0_1939897879 = idx_0_1939897879 + 1) begin: forLoop_idx_0_1939897879
            adder_fa full_adder (
                .a(M_full_adder_a[idx_0_1939897879]),
                .b(M_full_adder_b[idx_0_1939897879]),
                .cin(M_full_adder_cin[idx_0_1939897879]),
                .s(M_full_adder_s[idx_0_1939897879]),
                .cout(M_full_adder_cout[idx_0_1939897879])
            );
        end
    endgenerate
    
    
    always @* begin
        carry[1'h0] = 1'h0;
        for (RR_3faacb55_i = 0; RR_3faacb55_i < SIZE; RR_3faacb55_i = RR_3faacb55_i + 1) begin
      R_3faacb55_i = (0) + RR_3faacb55_i * (1);
            M_full_adder_a[R_3faacb55_i] = a[R_3faacb55_i];
            M_full_adder_b[R_3faacb55_i] = b[R_3faacb55_i];
            M_full_adder_cin[R_3faacb55_i] = carry[R_3faacb55_i];
            carry[R_3faacb55_i + 1'h1] = M_full_adder_cout[R_3faacb55_i];
            sum[R_3faacb55_i] = M_full_adder_s[R_3faacb55_i];
        end
        carry_out = carry[SIZE];
    end
    
    
endmodule