module decimal_counter #(
    START = 0 
)(
    input clk,      // clock
    input rst,      // reset
    input dec,      // increment the counter
    output ovf,     // counter overflowed
    output value[4] // current value
) {
    .clk(clk), .rst(rst) {
        dff val[4](#INIT(START))     // value storage
    }
    
    always {
       
        value = val.q             // output the value
        ovf = val.q == 0 && dec   // if max value and incrementing, overflow!
        
        if (dec) {                // should add 1
            if (val.q == 0)       // if max value
                val.d = 9         // reset to 0
            else                  // otherwise
                val.d = val.q -1 // add one
        }
    }
}
