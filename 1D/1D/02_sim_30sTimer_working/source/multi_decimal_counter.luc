module multi_decimal_counter #(
    DIGITS = 4 : DIGITS >= 2  // number of digits
) (
    input clk,                // clock
    input rst,                // reset
    input inc,                // increment counter
    output digits[DIGITS][4]  // digit values
) {
    .clk(clk), .rst(rst) {
        decimal_counter dctr[DIGITS](#START({4d3,4d0})); // digit counters
    }
    
    always {
        if (dctr.value[1] == 0 && dctr.value[0] == 0){
             dctr.dec[0] = 0;   // increment the first digit
        }
        else{
            dctr.dec[0] = inc;
        }
        digits = dctr.value // output the values
        
        // if the previous digit overflows, increment the next
        dctr.dec[1+:DIGITS-1] = dctr.ovf[0+:DIGITS-1]
        
        
    }
}
