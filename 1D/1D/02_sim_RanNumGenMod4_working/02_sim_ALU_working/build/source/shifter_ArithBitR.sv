/*
    This file was generated automatically by Alchitry Labs 2.0.30-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module shifter_ArithBitR #(
        parameter SIZE = 6'h20
    ) (
        input wire [(SIZE)-1:0] a,
        input wire [4:0] shift,
        output reg [(SIZE)-1:0] result
    );
    logic [(SIZE)-1:0] bit1;
    logic [(SIZE)-1:0] bit2;
    logic [(SIZE)-1:0] bit4;
    logic [(SIZE)-1:0] bit8;
    logic [(SIZE)-1:0] bit16;
    always @* begin
        bit1 = shift[1'h0] ? {a[SIZE - 1'h1], a[SIZE - 1'h1:1'h1]} : a;
        bit2 = shift[1'h1] ? {a[SIZE - 1'h1], 1'h0, bit1[SIZE - 1'h1:2'h2]} : bit1;
        bit4 = shift[2'h2] ? {a[SIZE - 1'h1], 3'h0, bit2[SIZE - 1'h1:3'h4]} : bit2;
        bit8 = shift[2'h3] ? {a[SIZE - 1'h1], 7'h0, bit4[SIZE - 1'h1:4'h8]} : bit4;
        bit16 = shift[3'h4] ? {a[SIZE - 1'h1], 15'h0, bit8[SIZE - 1'h1:5'h10]} : bit8;
        result = bit16;
    end
    
    
endmodule